  /**
   * {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{{description}}}{{/description}}
   */
  public enum {{#datatypeWithEnum}}{{{.}}}{{/datatypeWithEnum}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}} {
    {{#gson}}
        {{#allowableValues}}
            {{#enumVars}}
    @SerializedName({{#isInteger}}"{{/isInteger}}{{#isDouble}}"{{/isDouble}}{{#isLong}}"{{/isLong}}{{#isFloat}}"{{/isFloat}}{{{value}}}{{#isInteger}}"{{/isInteger}}{{#isDouble}}"{{/isDouble}}{{#isLong}}"{{/isLong}}{{#isFloat}}"{{/isFloat}})
    {{{name}}}({{#value}}{{{value}}}{{/value}}{{^value}}null{{/value}}){{^@last}},
    {{/@last}}{{#@last}};{{/@last}}
            {{/enumVars}}
        {{/allowableValues}}
    {{/gson}}
    {{^gson}}
        {{#allowableValues}}
            {{#enumVars}}
    {{{name}}}({{#value}}{{{value}}}{{/value}}{{^value}}null{{/value}}){{^@last}},
    {{/@last}}{{#@last}};{{/@last}}
            {{/enumVars}}
        {{/allowableValues}}
    {{/gson}}

    @JsonCreator
    public static {{#datatypeWithEnum}}{{{.}}}{{/datatypeWithEnum}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}} fromValue(String text) {
  		return nl.davinci.rest.validation.JsonEnumHelper.getEnumFromString({{{classname}}}.class, value);
    }
  }
