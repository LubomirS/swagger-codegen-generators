/**
 * {{#description}}{{.}}{{/description}}{{^description}}{{classname}}{{/description}}
 */{{#description}}
{{#useOas2}}@ApiModel{{/useOas2}}{{^useOas2}}@Schema{{/useOas2}}(description = "{{{description}}}"){{/description}}
{{>generatedAnnotation}}{{#discriminator}}{{>typeInfoAnnotation}}{{/discriminator}}{{>xmlAnnotation}}
{{#notNullJacksonAnnotation}}@JsonInclude(JsonInclude.Include.NON_NULL){{/notNullJacksonAnnotation}}
{{#vendorExtensions.x-entity-filter}}
	@com.fasterxml.jackson.annotation.JsonFilter(nl.davinci.close.domain.model.common.JsonConfiguration.ENTITY_FILTER)
{{/vendorExtensions.x-entity-filter}}
public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}} {{#serializableModel}}implements Serializable {{#interfaceModels}}, {{classname}}{{^@last}}, {{/@last}}{{#@last}} {{/@last}}{{/interfaceModels}}{{/serializableModel}}{{^serializableModel}}{{#interfaceModels}}{{#@first}}implements {{/@first}}{{classname}}{{^@last}}, {{/@last}}{{#@last}}{{/@last}}{{/interfaceModels}}{{/serializableModel}} {
{{#serializableModel}}
  private static final long serialVersionUID = 1L;

{{/serializableModel}}
  {{#vars}}
    {{#baseItems this}}
    {{#isEnum}}
{{>enumClass}}
    {{/isEnum}}
    {{/baseItems}}
  {{#jackson}}
    {{#vendorExtensions.x-is-discriminator-property}}
  @JsonTypeId
    {{/vendorExtensions.x-is-discriminator-property}}
    {{^vendorExtensions.x-is-discriminator-property}}
  @JsonProperty("{{baseName}}"){{#withXml}}
  @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace="{{xmlNamespace}}", {{/xmlNamespace}}localName = "{{#xmlName}}{{xmlName}}{{/xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}"){{/withXml}}
    {{/vendorExtensions.x-is-discriminator-property}}
  {{/jackson}}
  {{#gson}}
  @SerializedName("{{baseName}}")
  {{/gson}}
  {{#isContainer}}
  {{#useBeanValidation}}@Valid{{/useBeanValidation}}
  private {{{datatypeWithEnum}}} {{name}}{{#required}} = {{{defaultValue}}}{{/required}}{{^required}} = null{{/required}};
  {{/isContainer}}
  {{#vendorExtensions.x-element-ref}}
  @nl.davinci.rest.elementref.annotations.ElementRef("{{vendorExtensions.x-element-ref}}")
  {{/vendorExtensions.x-element-ref}}
  {{#vendorExtensions.x-expandable}}
  @nl.davinci.close.domain.model.common.expand.Expandable(name = "{{name}}", paths = {
  {{#expansion}}@nl.davinci.close.domain.model.common.expand.ExpandPath({{#productFamilyType}}product = ProductFamilyType.{{productFamilyType}},{{/productFamilyType}}{{#loanLifeCycle}}loanLifecycle = LoanLifeCycleType.{{loanLifeCycle}}{{/loanLifeCycle}}){{^last}}, {{/last}}
  {{/expansion}}
  })
  {{/vendorExtensions.x-expandable}}
  {{#vendorExtensions.x-entity-id}}
  @nl.davinci.rest.elementref.annotations.ElementId
  {{/vendorExtensions.x-entity-id}}
  {{#vendorExtensions.x-decimal-format}}
  @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = nl.davinci.close.domain.model.common.serialization.{{vendorExtensions.x-decimal-format}}Serializer.class)
  @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = nl.davinci.close.domain.model.common.serialization.{{vendorExtensions.x-decimal-format}}Deserializer.class)
  {{/vendorExtensions.x-decimal-format}}
  {{^isContainer}}
  private {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};
  {{/isContainer}}

  {{/vars}}
  {{#vars}}
  public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
    return this;
  }
  {{#isListContainer}}

  public {{classname}} add{{nameInCamelCase}}Item({{{items.datatypeWithEnum}}} {{name}}Item) {
    {{^required}}
    if (this.{{name}} == null) {
      this.{{name}} = {{{defaultValue}}};
    }
    {{/required}}
    this.{{name}}.add({{name}}Item);
    return this;
  }
  {{/isListContainer}}
  {{#isMapContainer}}

  public {{classname}} put{{nameInCamelCase}}Item(String key, {{{items.datatypeWithEnum}}} {{name}}Item) {
    {{^required}}
    if (this.{{name}} == null) {
      this.{{name}} = {{{defaultValue}}};
    }
    {{/required}}
    this.{{name}}.put(key, {{name}}Item);
    return this;
  }
  {{/isMapContainer}}

  /**
  {{#description}}
   * {{{description}}}
  {{/description}}
  {{^description}}
   * Get {{name}}
  {{/description}}
  {{#minimum}}
   * minimum: {{minimum}}
  {{/minimum}}
  {{#maximum}}
   * maximum: {{maximum}}
  {{/maximum}}
   * @return {{name}}
   **/
 {{#vendorExtensions.extraAnnotation}}
  {{{vendorExtensions.extraAnnotation}}}
  {{/vendorExtensions.extraAnnotation}}
  {{#useOas2}}
  @ApiModelProperty({{#example}}example = "{{{example}}}", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = "{{{description}}}")
  {{/useOas2}}
  {{^useOas2}}
  @Schema({{#example}}example = "{{{example}}}", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}accessMode = Schema.AccessMode.READ_ONLY, {{/isReadOnly}}description = "{{{description}}}")
  {{/useOas2}}
  {{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}  public {{{datatypeWithEnum}}} {{getter}}() {
  {{#vendorExtensions.x-expands-list}}
	  return nl.davinci.close.domain.model.common.expand.ExpandManager.getExpansionNames(this.getClass());
  {{/vendorExtensions.x-expands-list}}
  {{^vendorExtensions.x-expands-list}}
	  return {{name}};
  {{/vendorExtensions.x-expands-list}}
  }

  public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
  }

  {{/vars}}

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }{{#hasVars}}
    {{classname}} {{classVarName}} = ({{classname}}) o;
    return {{#vars}}Objects.equals(this.{{name}}, {{classVarName}}.{{name}}){{#hasMore}} &&
        {{/hasMore}}{{/vars}}{{#parent}} &&
        super.equals(o){{/parent}};{{/hasVars}}{{^hasVars}}
    return true;{{/hasVars}}
  }

  @Override
  public int hashCode() {
    return Objects.hash({{#vars}}{{name}}{{#hasMore}}, {{/hasMore}}{{/vars}}{{#parent}}{{#hasVars}}, {{/hasVars}}super.hashCode(){{/parent}});
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class {{classname}} {\n");
    {{#parent}}sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/parent}}
    {{#vars}}sb.append("    {{name}}: ").append(toIndentedString({{name}})).append("\n");
    {{/vars}}sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
